!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){function t(e,t,n){t.addClass("tree-selected"),"item"===t.data("type")&&n.hasClass(e.options["unselected-icon"])&&n.removeClass(e.options["unselected-icon"]).addClass(e.options["selected-icon"])}function n(e,t,n){t.removeClass("tree-selected"),"item"===t.data("type")&&n.hasClass(e.options["selected-icon"])&&n.removeClass(e.options["selected-icon"]).addClass(e.options["unselected-icon"])}function s(s,i,r){e.each(r.$elements,function(t,n){var s=e(n);s[0]!==i.$element[0]&&r.dataForEvent.push(e(s).data())}),i.$element.hasClass("tree-selected")?(n(s,i.$element,i.$icon),r.eventType="deselected"):(t(s,i.$element,i.$icon),r.eventType="selected",r.dataForEvent.push(i.elementData))}function i(e,s,i){if(i.$elements[0]!==s.$element[0]){e.deselectAll(e.$element);t(e,s.$element,s.$icon),i.eventType="selected",i.dataForEvent=[s.elementData]}else n(e,s.$element,s.$icon),i.eventType="deselected",i.dataForEvent=[]}var r=e.fn.tree,o=function t(n,s){this.$element=e(n),this.options=e.extend({},e.fn.tree.defaults,s),this.options.itemSelect&&this.$element.on("click.fu.tree",".tree-item",e.proxy(function(e){this.selectItem(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-branch-header",e.proxy(function(e){this.options.folderSelect||this.toggleFolder(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-overflow",e.proxy(function(t){this.populate(e(t.currentTarget))},this)),this.options.folderSelect&&(this.$element.addClass("tree-folder-select"),this.$element.off("click.fu.tree",".tree-branch-name"),this.$element.on("click.fu.tree",".icon-caret",e.proxy(function(t){this.toggleFolder(e(t.currentTarget).next())},this)),this.$element.on("click.fu.tree",".tree-branch-header",e.proxy(function(t){this.selectFolder(e(t.currentTarget))},this))),this.render()};o.prototype={constructor:o,deselectAll:function t(s){s=s||this.$element;var i=e(s).find(".tree-selected"),r=this;return i.each(function(t,s){n(r,e(s),e(s).find("."+e.trim(r.options["base-icon"]).replace(/(\s+)/g,".")))}),i},destroy:function e(){return this.$element.find("li:not([data-template])").remove(),this.$element.remove(),this.$element[0].outerHTML},render:function e(){this.populate(this.$element)},populate:function t(n,s){var i=this,r=n.hasClass("tree-overflow"),o=n.hasClass("tree")?n:n.parent(),l=o.hasClass("tree");r&&!l&&(o=o.parent());var a=o.data();r&&(a.overflow=n.data()),s=s||!1,r&&(l?n.replaceWith(o.find("> .tree-loader").remove()):n.remove());var d=o.find(".tree-loader:last");s===!1&&d.removeClass("hide hidden"),this.options.dataSource(a?a:{},function(t){e.each(t.data,function(t,n){var s;if("folder"===n.type){s=i.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),s.data(n),s.find(".tree-branch-name > .tree-label").html(n.text||n.name);var r=s.find(".tree-branch-header");"icon-class"in n&&r.find("i").addClass(n["icon-class"]),"additionalParameters"in n&&"item-selected"in n.additionalParameters&&1==n.additionalParameters["item-selected"]&&setTimeout(function(){r.trigger("click")},0)}else"item"===n.type?(s=i.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),s.find(".tree-item-name > .tree-label").html(n.text||n.name),s.data(n),"additionalParameters"in n&&"item-selected"in n.additionalParameters&&1==n.additionalParameters["item-selected"]&&(s.addClass("tree-selected"),s.find("i").removeClass(i.options["unselected-icon"]).addClass(i.options["selected-icon"]))):"overflow"===n.type&&(s=i.$element.find("[data-template=treeoverflow]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),s.find(".tree-overflow-name > .tree-label").html(n.text||n.name),s.data(n));var a=n.attr||n.dataAttributes||[];e.each(a,function(e,t){switch(e){case"cssClass":case"class":case"className":s.addClass(t);break;case"data-icon":s.find(".icon-item").removeClass().addClass("icon-item "+t),s.attr(e,t);break;case"id":s.attr(e,t),s.attr("aria-labelledby",t+"-label"),s.find(".tree-branch-name > .tree-label").attr("id",t+"-label");break;default:s.attr(e,t)}}),l?o.append(s):o.find(".tree-branch-children:eq(0)").append(s)}),o.find(".tree-loader").addClass("hidden"),i.$element.trigger("loaded.fu.tree",o)})},selectTreeNode:function t(n,r){var o={};o.$element=e(n);var l={};l.$elements=this.$element.find(".tree-selected"),l.dataForEvent=[],"folder"===r?(o.$element=o.$element.closest(".tree-branch"),o.$icon=o.$element.find(".icon-folder")):o.$icon=o.$element.find(".icon-item"),o.elementData=o.$element.data(),this.options.multiSelect?s(this,o,l):i(this,o,l),this.$element.trigger(l.eventType+".fu.tree",{target:o.elementData,selected:l.dataForEvent}),o.$element.trigger("updated.fu.tree",{selected:l.dataForEvent,item:o.$element,eventType:l.eventType})},discloseFolder:function t(n){var s=e(n),i=s.closest(".tree-branch"),r=i.find(".tree-branch-children"),o=r.eq(0);i.addClass("tree-open"),i.attr("aria-expanded","true"),o.removeClass("hide hidden"),i.find("> .tree-branch-header .icon-folder").eq(0).removeClass(this.options["close-icon"]).addClass(this.options["open-icon"]),i.find("> .icon-caret").eq(0).removeClass(this.options["folder-open-icon"]).addClass(this.options["folder-close-icon"]),r.children().length||this.populate(r),this.$element.trigger("disclosedFolder.fu.tree",i.data())},closeFolder:function t(n){var s=e(n),i=s.closest(".tree-branch"),r=i.find(".tree-branch-children"),o=r.eq(0);i.removeClass("tree-open"),i.attr("aria-expanded","false"),o.addClass("hidden"),i.find("> .tree-branch-header .icon-folder").eq(0).removeClass(this.options["open-icon"]).addClass(this.options["close-icon"]),i.find("> .icon-caret").eq(0).removeClass(this.options["folder-close-icon"]).addClass(this.options["folder-open-icon"]),this.options.cacheItems||o.empty(),this.$element.trigger("closed.fu.tree",i.data())},toggleFolder:function t(n){var s=e(n);s.find("."+e.trim(this.options["close-icon"]).replace(/(\s+)/g,".")).length?this.discloseFolder(n):s.find("."+e.trim(this.options["open-icon"]).replace(/(\s+)/g,".")).length&&this.closeFolder(n)},selectFolder:function e(t){this.options.folderSelect&&this.selectTreeNode(t,"folder")},selectItem:function e(t){this.options.itemSelect&&this.selectTreeNode(t,"item")},selectedItems:function t(){var n=this.$element.find(".tree-selected"),s=[];return e.each(n,function(t,n){s.push(e(n).data())}),s},collapse:function e(){var t=this,n=[],s=function e(s,i){n.push(i),0===t.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").length&&(t.$element.trigger("closedAll.fu.tree",{tree:t.$element,reportedClosed:n}),t.$element.off("loaded.fu.tree",t.$element,e))};t.$element.on("closed.fu.tree",s),t.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").each(function(){t.closeFolder(this)})},discloseVisible:function t(){var n=this,s=n.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')"),i=[],r=function e(t,r){i.push(r),i.length===s.length&&(n.$element.trigger("disclosedVisible.fu.tree",{tree:n.$element,reportedOpened:i}),n.$element.off("loaded.fu.tree",n.$element,e))};n.$element.on("loaded.fu.tree",r),n.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").each(function(){n.discloseFolder(e(this).find(".tree-branch-header"))})},discloseAll:function e(){var t=this;"undefined"==typeof t.$element.data("disclosures")&&t.$element.data("disclosures",0);var n=t.options.disclosuresUpperLimit>=1&&t.$element.data("disclosures")>=t.options.disclosuresUpperLimit,s=0===t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").length;if(s)t.$element.trigger("disclosedAll.fu.tree",{tree:t.$element,disclosures:t.$element.data("disclosures")}),t.options.cacheItems||t.$element.one("closeAll.fu.tree",function(){t.$element.data("disclosures",0)});else{if(n&&(t.$element.trigger("exceededDisclosuresLimit.fu.tree",{tree:t.$element,disclosures:t.$element.data("disclosures")}),!t.$element.data("ignore-disclosures-limit")))return;t.$element.data("disclosures",t.$element.data("disclosures")+1),t.$element.one("disclosedVisible.fu.tree",function(){t.discloseAll()}),t.discloseVisible()}},refreshFolder:function e(t){var n=t.closest(".tree-branch"),s=n.find(".tree-branch-children");s.eq(0).empty(),n.hasClass("tree-open")?this.populate(s,!1):this.populate(s,!0),this.$element.trigger("refreshedFolder.fu.tree",n.data())}},o.prototype.closeAll=o.prototype.collapse,o.prototype.openFolder=o.prototype.discloseFolder,o.prototype.getValue=o.prototype.selectedItems,e.fn.tree=function(t){var n,s=Array.prototype.slice.call(arguments,1),i=this.each(function(){var i=e(this),r=i.data("fu.tree"),l="object"==typeof t&&t;r||i.data("fu.tree",r=new o(this,l)),"string"==typeof t&&(n=r[t].apply(r,s))});return void 0===n?i:n},e.fn.tree.defaults={dataSource:function e(t,n){},multiSelect:!1,cacheItems:!0,folderSelect:!0,itemSelect:!0,disclosuresUpperLimit:0},e.fn.tree.Constructor=o,e.fn.tree.noConflict=function(){return e.fn.tree=r,this}});